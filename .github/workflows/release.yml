name: publish

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install poetry
        uses: ./.github/actions/poetry-install

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          body_path: "CHANGELOG.md"
          token: ${{secrets.GITHUB_TOKEN}}
          tag_name: ${{ github.ref_name }}

      - name: Publish docs
        uses: ./.github/actions/publish-docs
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  update_main:
    needs: [release]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install poetry
        uses: ./.github/actions/poetry-install

      - name: Move main to dev
        id: dev-next
        run: |
          echo "
          [bumpversion]
          current_version = $(poetry version --short)
          parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)((?P<release>a|b|rc)(?P<post>\d+))?(-(?P<dev>.*))?
          serialize =
                  {major}.{minor}.{patch}{release}{post}-{dev}
                  {major}.{minor}.{patch}{release}{post}
                  {major}.{minor}.{patch}-{dev}
                  {major}.{minor}.{patch}
          commit = False
          tag = False
          
          [bumpversion:part:dev]
          values =
                  ""
                  dev
          
          [bumpversion:part:release]
          values =
                  ""
                  alpha
                  beta
                  rc
          
          [bumpversion:file:./poetry_template/__init__.py]
          
          [bumpversion:file:pyproject.toml]
          search = version = \"{current_version}\"
          replace = version = \"{new_version}\"       
          " > .bumpversion.cfg
          nxtRelease=$(poetry version prerelease --short --dry-run) 
          nxtRelease=($nxtRelease)
          poetry run bumpversion --new-version "${nxtRelease[0]}" patch --allow-dirty --no-commit --no-tag --verbose 

      - name: Commit Changelog.md
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: 'move master to $(poetry version --short)'